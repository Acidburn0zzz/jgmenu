.\" Automatically generated by Pandoc 1.19.2.1
.\"
.TH "JGMENUTUTORIAL" "7" "1 May, 2017" "" ""
.hy
.SH NAME
.PP
The jgmenu tutorial
.SH INTRODUCTION
.PP
This tutorial aims to explain the usage of jgmenu through a set of
.PD 0
.P
.PD
lessons.
.SH LESSONS
.SS Lesson 1
.PP
After installing jgmenu, you can get going quickly by running:
.IP
.nf
\f[C]
jgmenu_run
\f[]
.fi
.PP
That\[aq]s it!
.PP
There are three points worth noting about what you have just done:
.IP \[bu] 2
You should see a "Linux/BSD system" menu with categories such as
.PD 0
.P
.PD
"Graphics" and "Office".
We call this menu "pmenu" (explained
.PD 0
.P
.PD
below).
.IP \[bu] 2
If you use tint2, jgmenu should have copied its appearance,
.PD 0
.P
.PD
position and alignment.
.IP \[bu] 2
You have just started a long\-running application.
If you click
.PD 0
.P
.PD
outside the menu, press escape or select a menu item (using
.PD 0
.P
.PD
mouse or keyboard), the menu will no longer be visible but is
.PD 0
.P
.PD
still running.
It can be awoken (made visible) by executing
.PD 0
.P
.PD
\f[C]jgmenu_run\f[] again.
.PP
If you do not use tint2 or if you wish to override some of its
.PD 0
.P
.PD
settings, you can create a config file by running:
.IP
.nf
\f[C]
jgmenu_run\ init
\f[]
.fi
.PP
Edit this config file (~/.config/jgmenu/jgmenurc) to suit your
.PD 0
.P
.PD
system.
Read JGMENU\-CONFIG(1) for further information.
.PP
If you have a config file at ~/.config/jgmenu/jgmenurc and want to
.PD 0
.P
.PD
ignore it for the purposes of running one of the lessons, just use
.PD 0
.P
.PD
the command line argument "\-\-config\-file=" without specifying a file.
.PP
Some icons themes are slow to load on start\-up.
In order to improve
.PD 0
.P
.PD
start\-up times it is recommended to create icon\-cache (although it
.PD 0
.P
.PD
is not necessary).
Create icon cache using the command:
.IP
.nf
\f[C]
jgmenu_run\ cache
\f[]
.fi
.PP
If you use tint2 and want a traditional "start menu", you can do one
.PD 0
.P
.PD
of the following using tint2conf or by editing tint2rc directly:
.IP \[bu] 2
Add jgmenu.desktop to your launcher
.IP \[bu] 2
Create a button setting \f[C]button_lclick_command\ =\ jgmenu_run\f[]
.SS Lesson 2
.PP
From this point onwards, it is assumed that you understand basic
.PD 0
.P
.PD
shell usage including re\-direction (e.g.
<, >) and piping (e.g.
|).
.PP
The syntax below is used to denote the creation of a text file from
.PD 0
.P
.PD
whatever is between the EOFs.
You can of course use your favourite
.PD 0
.P
.PD
text editor instead.
.IP
.nf
\f[C]
cat\ >file\ <<EOF
foo
bar
EOF
\f[]
.fi
.PP
freedesktop.org have developed a menu standard which is adhered to
.PD 0
.P
.PD
by the big Desktop Environments.
In this tutorial we will refer to
.PD 0
.P
.PD
this type of menu as XDG.
.PP
There are at least two ways to run XDG(ish) menus:
.IP \[bu] 2
\f[C]jgmenu_run\ pmenu\f[]
.PD 0
.P
.PD
.IP \[bu] 2
\f[C]jgmenu_run\ xdg\f[]
.PP
To understand the subtleties between these, you need a basic
.PD 0
.P
.PD
appreciataion of the XDG menu\-spec and desktop\-entry\-spec.
See:
.PD 0
.P
.PD
http://standards.freedesktop.org/ for further information.
.PP
To keep things simple, when discussing XDG paths, only one location
.PD 0
.P
.PD
will be referred to rather than XDG variables and every possible
.PD 0
.P
.PD
location.
So for example, if "/usr/share" is quoted, it may refer to
.PD 0
.P
.PD
"/usr/local/share", "$HOME/.local/share", etc on your system.
.PP
In brief, there are three types of files which define the Linux/BSD
.PD 0
.P
.PD
system menu:
.IP \[bu] 2
\&.menu (/etc/xdg/menus)
.PD 0
.P
.PD
These are XML files describing such things as the menu categories
.PD 0
.P
.PD
and directory structure.
.IP \[bu] 2
\&.directory (/usr/share/desktop\-directories)
.PD 0
.P
.PD
These describe the menu directories
.IP \[bu] 2
\&.desktop (/usr/share/applications)
.PD 0
.P
.PD
Each application has a .desktop file associated with it.
These
.PD 0
.P
.PD
files contain most of the information needed to build a menu
.PD 0
.P
.PD
(e.g.
"Name", "Exec command", "Icon", "Category")
.PP
\f[C]jgmenu_run\ pmenu\f[] is written in python by \@o9000.
It uses .directory
.PD 0
.P
.PD
and .desktop files to build a menu, but ignores any .menu files.
.PD 0
.P
.PD
Instead of the structure specified in the .menu file, it simply maps
.PD 0
.P
.PD
each ".desktop" application onto one of the ".directory" categories.
.PD 0
.P
.PD
If a matching ".directory" category does not exist, it tries to
.PD 0
.P
.PD
cross\-reference "additional categories" to "related categories" in
.PD 0
.P
.PD
accordance with the XDG menu\-spec.
.PD 0
.P
.PD
This is a generic approach which avoids Desktop Environment specific
.PD 0
.P
.PD
rules defined in the .menu file.
It ensures that all .desktop files
.PD 0
.P
.PD
are included in the menu.
.PP
\f[C]jgmenu_run\ xdg\f[] is written in C by myself.
It uses libxml2 to parse
.PD 0
.P
.PD
the .menu file, but is otherwise written from scratch.
It adheres
.PD 0
.P
.PD
to the basics of XDG\[aq]s menu\-spec but has a long way to go to
achieve
.PD 0
.P
.PD
full compliance.
.SS Lesson 3
.PP
There are many ways to run jgmenu.
In lesson 1, you saw jgmenu as a
.PD 0
.P
.PD
long\-running application.
As we go through the next few lessons we
.PD 0
.P
.PD
will run jgmenu as a short\-lived applications.
This means that it
.PD 0
.P
.PD
starts from scratch every time it is called.
.PP
Let us put XDG system menus and \f[C]jgmenu_run\f[] to one side and get
.PD 0
.P
.PD
back to basics.
Try the following:
.IP
.nf
\f[C]
echo\ >foo.txt\ <<EOF
xterm
firefox
EOF
\f[]
.fi
.PP
If you have not got used to the syntax yet, it just means that you
.PD 0
.P
.PD
put the words "xterm" and "firefox" in a text file using a text
.PD 0
.P
.PD
editor.
Then do:
.IP
.nf
\f[C]
cat\ foo.txt\ |\ jgmenu\ \-\-simple\ \-\-icon\-size=0
\f[]
.fi
.PP
The option \-\-simple make jgmenu short\-lived and disables all syncing
.PD 0
.P
.PD
with tint2
.PP
The option \-\-icon\-size=0, disables icons (i.e.
it does not just
.PD 0
.P
.PD
display them at zero size, it actually avoids loading them)
.PP
If you have dmenu installed, you will get a very similar result
.PD 0
.P
.PD
with:
.IP
.nf
\f[C]
cat\ foo.txt\ |\ dmenu
\f[]
.fi
.SS Lesson 4
.PP
As you saw in the previous example, each line fed to \f[I]stdin\f[]
becomes
.PD 0
.P
.PD
a menu item.
Any line containing two fields separated by a comma
.PD 0
.P
.PD
is parsed as \f[I]description\f[],\f[I]command\f[].
Consider the following:
.IP
.nf
\f[C]
cat\ <<EOF\ >menu.sh
#!/bin/sh
(
printf\ "Terminal,xterm\\n"
printf\ "File\ Manager,pcmanfm\\n"
)\ |\ jgmenu\ \-\-vsimple
EOF

chmod\ +x\ menu.sh
\&./menu.sh
\f[]
.fi
.PP
This lets you give a more meaningful description to each menu item.
.PP
The command line argument \-\-vsimple is the same as \-\-simple, but
also
.PD 0
.P
.PD
disables icons and ignores jgmenurc (if it exists).
.SS Lesson 5
.PP
To display icons, you need to populate the third field.
.PP
By default, jgmenu will obtain the icon theme from xsettings (if
.PD 0
.P
.PD
it is running) or tint2rc (if it exists).
When running with the
.PD 0
.P
.PD
\-\-simple argument, make sure that \f[I]icon_theme\f[] is set to
something
.PD 0
.P
.PD
sensible in your $HOME/.config/jgmenu/jgmenurc.
.IP
.nf
\f[C]
(
Browser,firefox,firefox
File\ manager,pcmanfm,system\-file\-manager
Terminal,xterm,utilities\-terminal
Lock,i3lock\ \-c\ 000000,system\-lock\-screen
Exit\ to\ prompt,openbox\ \-\-exit,system\-log\-out
Reboot,systemctl\ \-i\ reboot,system\-reboot
Poweroff,systemctl\ \-i\ poweroff,system\-shutdown
)\ |\ jgmenu\ \-\-simple
\f[]
.fi
.PP
In the third field you can also specify the full path if you wish
.PD 0
.P
.PD
e.g.
"/usr/share/icons/Faenza/places/22/folder.png"
.SS Lesson 6
.PP
So far we have looked at producing a single "root" menu only.
.PD 0
.P
.PD
jgmenu understands a small amount of markup and enables submenus
.PD 0
.P
.PD
by ^tag() and ^checkout().
Try this:
.IP
.nf
\f[C]
cat\ <<EOF\ >menu.txt
Terminal,xterm
File\ Manager,pcmanfm
Settings,^checkout(settings)

Settings,^tag(settings)
Set\ Background\ Image,nitrogen
EOF

jgmenu\ \-\-vsimple\ <menu.txt

#\ OR
cat\ menu.txt\ |\ jgmenu\ \-\-vsimple
\f[]
.fi
.PP
A couple of points on submenus:
.PP
\ \ \- You can press \f[I]backspace\f[] to go back to the parent menu.
.PP
\ \ \- You can define the root menu with a ^tag().
If you do not, it
.PD 0
.P
.PD
\ \ \ \ can still be checked out with ^back().
.SS Lesson 7
.PP
You can create a very simple XDG menu without any directories or
.PD 0
.P
.PD
categories in the following way:
.IP
.nf
\f[C]
jgmenu_run\ parse\-xdg\ \-\-no\-dirs\ |\ jgmenu\ \-\-vsimple
\f[]
.fi
.PP
"parse\-xdg \-\-no\-dirs" outputs all apps with a .desktop file
.PD 0
.P
.PD
(normally in /usr/share/applications) without and categories
.PD 0
.P
.PD
or directories.
.PP
jgmenu has a \f[I]search\f[] capability.
When a menu is open, just start
.PD 0
.P
.PD
typing to invoke a filter.
.PP
Carrying on the comparison with dmenu, the equivalent can be achieved
.PD 0
.P
.PD
by:
.IP
.nf
\f[C]
jgmenu_run\ parse\-xdg\ \-\-no\-dirs\ |\ awk\ \-F,\ \[aq]{\ print\ $2}\[aq]\ |\ dmenu
\f[]
.fi
.SS Lesson 8
.PP
This one is just for a bit of fun:
.IP
.nf
\f[C]
IFS=:
(
for\ d\ in\ $PATH
do
\ \ \ \ \ \ \ \ cd\ $d
\ \ \ \ \ \ \ \ find\ .\ \-maxdepth\ 1\ \-type\ f\ \-executable\ |\ sed\ "s|^\\./||"
done
)\ |\ jgmenu\ \-\-vsimple
\f[]
.fi
.PP
If you have dmenu installed, the following should be the same:
.IP
.nf
\f[C]
dmenu_path\ |\ jgmenu
\f[]
.fi
.SS Lesson 9
.PP
Let\[aq]s go back to pmenu.
.PP
If you create the files append.csv and/or prepend.csv in
.PD 0
.P
.PD
$HOME/.config/jgmenu, these will be added to your root menu.
.PP
For example, you could do:
.IP
.nf
\f[C]
cat\ >$HOME/.config/jgmenu/prepend.csv\ <<EOF
Browser,firefox,firefox
File\ manager,pcmanfm,system\-file\-manager
Terminal,xterm,utilities\-terminal
^sep()
EOF

cat\ >$HOME/.config/jgmenu/append.csv\ <<EOF
^sep()
Exit\ to\ prompt,openbox\ \-\-exit,system\-log\-out
Suspend,systemctl\ \-i\ suspend,system\-log\-out
Reboot,systemctl\ \-i\ reboot,system\-reboot
Poweroff,systemctl\ \-i\ poweroff,system\-shutdown
EOF

jgmenu_run\ pmenu
\f[]
.fi
.PP
^sep() inserts a horizontal separator line
.SS Lesson 10
.PP
If you run on a slow computer, you could speed up the start\-up time
.PD 0
.P
.PD
by "caching" the menu data.
For example:
.IP
.nf
\f[C]
jgmenu_run\ parse\-pmenu\ >foo.csv
jgmenu\ <foo.csv
\f[]
.fi
.PP
Or if you do
.IP
.nf
\f[C]
jgmenu_run\ parse\-pmenu\ >$HOME/.config/jgmenu/default.csv
\f[]
.fi
.PP
you could simply invoke this menu by:
.IP
.nf
\f[C]
jgmenu_run\ csv
\f[]
.fi
.SH AUTHORS
Johan Malm.
